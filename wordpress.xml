<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.1" created="2015-04-30 00:53" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>DeJohn Dong</title>
	<link>http://www.dejohndong.com</link>
	<description>董佳的博客</description>
	<pubDate>Thu, 30 Apr 2015 00:53:41 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.dejohndong.com</wp:base_site_url>
	<wp:base_blog_url>http://www.dejohndong.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>dongjia_9251@126.com</wp:author_email><wp:author_display_name><![CDATA[DeJohn]]></wp:author_display_name><wp:author_first_name><![CDATA[DeJohn]]></wp:author_first_name><wp:author_last_name><![CDATA[Dong]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>style</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[DeJohn Style]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>note</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[iOS学习笔记]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>ios-development</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[iOS开发]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>objective-c</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Objective-C]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>lifestyle</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[生活]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>jailbreak</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[越狱开发]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=4.1</generator>

	<item>
		<title>你好，访客</title>
		<link>http://www.dejohndong.com/?p=1</link>
		<pubDate>Fri, 13 Feb 2015 08:52:36 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[本人2011年开始从事iOS开发，目前混迹于嘉兴，一个小巧的城市，在这里你可以跟我交流iOS方面的所有技术。

我的github地址：<a href="http://github.com/openboy2012">http://github.com/openboy2012</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2015-02-13 08:52:36</wp:post_date>
		<wp:post_date_gmt>2015-02-13 08:52:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="style"><![CDATA[DeJohn Style]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>实现iOS的瀑布流：DDCollectionViewFlowLayout</title>
		<link>http://www.dejohndong.com/?p=5</link>
		<pubDate>Wed, 25 Feb 2015 14:01:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[<p id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd" class="" style="text-align: justify;">       前一段时间正在做iOS客户端的64位适配， 所以把项目设置成了最低系统要求为iOS6.0。空闲之余，准备把之前用UIScrollView实现的瀑布流用UICollectionView重新实现一下。于是乎，DDCollectionViewFlowLayout就这样诞生了。</p>
<p class="" style="text-align: justify;">       在学习UICollectionView的过程中，首先肯定是查阅苹果的官方文档 <a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionView_class/index.html#//apple_ref/swift/cl/UICollectionView">UICollectionView</a> ,了解基本信息以后得知实现瀑布流的方式必须使用<a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionViewLayout_class/index.html#//apple_ref/doc/c_ref/UICollectionViewLayout">UICollectionViewLayout</a> 继续参考苹果官方文档了解<a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionViewFlowLayout_class/index.html#//apple_ref/occ/cl/UICollectionViewFlowLayout">UICollectionViewFlowLayout</a> 必须实现的方法和生命周期 <em>。</em></p>
<p class="" style="text-align: justify;">      了解过UICollectionViewFlowLayout的Protocol方法以后，就可以着手写自己的代码了。首先 DDCollectionViewFlowLayout 继承了UICollectionViewFlowLayout,只要重载</p>

<pre class="lang:objc decode:true  ">- (void)prepareLayout;
- (NSArray *)layoutAttributesForElementsInRect:(CGRect)rect;
- (UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;</pre>
等方法就可以实现瀑布流的效果。
<h1 style="text-align: justify;">怎么获得代码？</h1>
<div style="text-align: justify;">可以通过以下链接在github中获取：</div>
<div style="text-align: justify;"><a href="https://github.com/openboy2012/DDCollectionViewFlowLayout">https://github.com/openboy2012/DDCollectionViewFlowLayout</a></div>
<div style="text-align: justify;">当然你也可以在CocoaPods 中搜索:</div>
<pre class="lang:sh decode:true">pod search 'DDCollectionViewFlowLyaout'</pre>
<div style="text-align: justify;">效果图：</div>
<div style="text-align: justify;"> <img class="alignnone" src="http://ipa-download.qiniudn.com/loadingmore.gif" alt="" width="235" height="433" /><img class="alignnone" src="http://ipa-download.qiniudn.com/waterfall.gif" alt="" width="235" height="433" /></div>
<h1 style="text-align: justify;">怎么使用？</h1>
<div style="text-align: justify;">        如果你只想简单应用，导入DDCollectionViewFlowLayout以后实现以下代码：</div>
<div style="text-align: justify;">
<pre class="lang:objc decode:true ">DDCollectionViewFlowLayout *layout = [[DDCollectionViewFlowLayout alloc] init];
layout.delegate = self;
[self.collectionView setLayout:layout];</pre>
然后要实现UICollectionViewDataSource 方法中的必需方法：
<pre class="lang:default decode:true">- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section;// The cell that is returned must be retrieved from a call to -dequeueReusableCellWithReuseIdentifier:forIndexPath:
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath;</pre>
我只在DDCollectionViewFlowLayout中新增了一个必需实现的delegate方法：
<pre class="lang:objc decode:true">- (NSInteger)collectionView:(UICollectionView *)collectionView layout:(DDCollectionViewFlowLayout *)layout numberOfColumnsInSection:(NSInteger)section</pre>
因为DDCollectionViewFlowLayout 继承了UICollectionViewFlowLayout，所以你可以选择性得实现UICollectionViewFlowLayoutDelegate中的所有非必需delegate方法, 例如：

</div>
<div>
<pre class="lang:objc decode:true">- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath;

- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;

- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;

- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section;</pre>
</div>
<div style="text-align: justify;">        这些方法都适配了DDCollectionViewFlowLayout,让你有亲切的感觉。</div>
<div style="text-align: justify;"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd" style="text-align: justify;"> 如有不懂可以参考Demo <a href="https://github.com/openboy2012/DDCollectionViewFlowLayout">https://github.com/openboy2012/DDCollectionViewFlowLayout</a></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2015-02-25 22:01:32</wp:post_date>
		<wp:post_date_gmt>2015-02-25 14:01:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%9e%e7%8e%b0ios%e7%9a%84%e7%80%91%e5%b8%83%e6%b5%81%ef%bc%9addcollectionviewflowlayout</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios-development"><![CDATA[iOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_56ef5e70d5a9e789b7d6bbb621849304</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_054e5efaf65f8865cdfea26fadca9dc1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_15dfd68fb9799efe4a2879784c683990</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7bb103a8d56fc44c3e07861ebf1156f8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0003ccfb45cdd0d751d4ab7e56a3b7c6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_post_restored_from</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:20:"restored_revision_id";i:14;s:16:"restored_by_user";i:1;s:13:"restored_time";i:1429088045;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2015-02-26 10_42_28</title>
		<link>http://www.dejohndong.com/?attachment_id=16</link>
		<pubDate>Thu, 26 Feb 2015 02:40:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/wp-content/uploads/2015/02/2015-02-26-10_42_28.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2015-02-26 10:40:52</wp:post_date>
		<wp:post_date_gmt>2015-02-26 02:40:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2015-02-26-10_42_28</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://ftp231483.host519.zhujiwu.cn/wp-content/uploads/2015/02/2015-02-26-10_42_28.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/2015-02-26-10_42_28.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:538;s:6:"height";i:736;s:4:"file";s:31:"2015/02/2015-02-26-10_42_28.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"2015-02-26-10_42_28-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:31:"2015-02-26-10_42_28-219x300.gif";s:5:"width";i:219;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>loadmore</title>
		<link>http://www.dejohndong.com/?attachment_id=17</link>
		<pubDate>Thu, 26 Feb 2015 02:41:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/wp-content/uploads/2015/02/loadmore.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2015-02-26 10:41:12</wp:post_date>
		<wp:post_date_gmt>2015-02-26 02:41:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>loadmore</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://ftp231483.host519.zhujiwu.cn/wp-content/uploads/2015/02/loadmore.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/loadmore.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:538;s:6:"height";i:736;s:4:"file";s:20:"2015/02/loadmore.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"loadmore-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:20:"loadmore-219x300.gif";s:5:"width";i:219;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>55a482d2e303a5dc064dbc8985abb5af</title>
		<link>http://www.dejohndong.com/?attachment_id=19</link>
		<pubDate>Thu, 26 Feb 2015 03:04:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/wp-content/uploads/2015/02/55a482d2e303a5dc064dbc8985abb5af.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2015-02-26 11:04:24</wp:post_date>
		<wp:post_date_gmt>2015-02-26 03:04:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>55a482d2e303a5dc064dbc8985abb5af</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://ftp231483.host519.zhujiwu.cn/wp-content/uploads/2015/02/55a482d2e303a5dc064dbc8985abb5af.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:1251;s:4:"file";s:44:"2015/02/55a482d2e303a5dc064dbc8985abb5af.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:44:"55a482d2e303a5dc064dbc8985abb5af-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:44:"55a482d2e303a5dc064dbc8985abb5af-300x188.jpg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:45:"55a482d2e303a5dc064dbc8985abb5af-1024x641.jpg";s:5:"width";i:1024;s:6:"height";i:641;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:44:"55a482d2e303a5dc064dbc8985abb5af-624x390.jpg";s:5:"width";i:624;s:6:"height";i:390;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_background</wp:meta_key>
			<wp:meta_value><![CDATA[twentytwelve]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/55a482d2e303a5dc064dbc8985abb5af.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>滚动的数字：FlickerNumber</title>
		<link>http://www.dejohndong.com/?p=20</link>
		<pubDate>Mon, 02 Mar 2015 14:50:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[最近的项目中要求实现支付宝的滚动数字的效果，查找到了一些第三方的代码，但是效果很不理想。然后就准备自己来实现该效果，在github的学习过程中看到很多大牛都是用Category来扩展实现某些功能，例如SDWebImage中的UIImageView的 Category,AFNetworking中的UIButton的Category等。
<h2>       思路：数字从某个起点数字跳转到目标数字，定时的去刷新当前累加的数字，达到一个数字变化的效果。</h2>
新建UILabel的Category:' UILable+FlickerNumber ’

新建方法:
<pre class="lang:objc decode:true ">/**
 *  flicker number only a number variable
 *
 *  @param number flicker number
 */
- (void)dd_setNumber:(NSNumber *)number;
/**
 *  flicker number in duration
 *
 *  @param number   flicker number
 *  @param duration duration time
 */
- (void)dd_setNumber:(NSNumber *)number
            duration:(NSTimeInterval)duration;
/**
 *  flicker number with format
 *
 *  @param number    flicker number
 *  @param formatStr format string
 */
- (void)dd_setNumber:(NSNumber *)number
              format:(NSString *)formatStr;
/**
 *  flicker number with attributes
 *
 *  @param number flicker number
 *  @param attrs  text attributes
 */
- (void)dd_setNumber:(NSNumber *)number
          attributes:(id)attrs;
/**
 *  flicker number with format in duration
 *
 *  @param number    flicker number
 *  @param duration  duration time
 *  @param formatStr format string
 */
- (void)dd_setNumber:(NSNumber *)number
            duration:(NSTimeInterval)duration
              format:(NSString *)formatStr;
/**
 *  flicker number with attribute in duration
 *
 *  @param number   flicker number
 *  @param duration duration time
 *  @param attrs    text attributes
 */
- (void)dd_setNumber:(NSNumber *)number
            duration:(NSTimeInterval)duration
          attributes:(id)attrs;
/**
 *  flicker number method
 *
 *  @param number   flicker number
 *  @param duration duration time
 *  @param format   format string
 *  @param attri    text attribute
 */
- (void)dd_setNumber:(NSNumber *)number
            duration:(NSTimeInterval)duration
              format:(NSString *)formatStr
          attributes:(id)attrs;
</pre>
这些方法满足了时长、格式化、NSMutableAttributeString的要求；

更多内容请看代码：

代码获得：<a href="https://github.com/openboy2012/FlickerNumber">https://github.com/openboy2012/FlickerNumber</a>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"> CocoaPods方式：
<pre class="lang:sh decode:true ">pod search 'FlickerNumber'</pre>
&nbsp;

</div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2015-03-02 22:50:32</wp:post_date>
		<wp:post_date_gmt>2015-03-02 14:50:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%bb%9a%e5%8a%a8%e7%9a%84%e6%95%b0%e5%ad%97%ef%bc%9aflickernumber</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios-development"><![CDATA[iOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_e8e34b0de854cf5577222ae4e94f8289</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cfd077d98c9723ebb42f2603b56cb6ec</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_869010ca42ab0b11b1ef1a6cd274220c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3a6020991d81feb1b34c4cc8d19b13b7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7d156d8ae9ff85f601bde3c27cd0eaf1</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_22d18fb6c237dcc50f7dba7152a93e6c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4bdd9fd6d077994ec4e8907c89efa946</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7f7f9c0cf17981d40c6b9f958779284d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于</title>
		<link>http://www.dejohndong.com/?page_id=35</link>
		<pubDate>Tue, 03 Mar 2015 13:43:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?page_id=35</guid>
		<description></description>
		<content:encoded><![CDATA[4年以上iOS应用开发经验，

熟悉iOS应用开发流程及 UIKit API、Graphics API、Cocoa API,GCD编程，基本了解C++的编程规范；

拥有较强的iOS应用设计能力及良好的用户体验设计；

熟悉iOS开发证书管理以及应用的发布流程;

熟悉CocoaPods;

拥有移动应用程序内数据库设计能力；

熟悉MVC的工作机制；

熟悉UIKit框架和Cocoa常用框架；

精通iOS内存管理；

基本了解Android开发流程；

工作中认真负责，生活上热情开朗、学习能力突出，喜欢创新、对新事物有很大的好奇心。

拥有一定的管理经验，擅长管理小型团队。

最近的3个月，对自己写过的东西进行沉淀，虽然github的标星不多，但是每一行代码都是用心去写的。

github地址：https://github.com/openboy2012
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2015-03-03 21:43:09</wp:post_date>
		<wp:post_date_gmt>2015-03-03 13:43:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：NSRunLoop的理解</title>
		<link>http://www.dejohndong.com/?p=41</link>
		<pubDate>Tue, 17 Mar 2015 07:00:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[官方文档的定义是<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSRunLoop_Class/index.html#//apple_ref/doc/uid/TP40003725">NSRunLoop</a>是用来管理线程中输入的资源，它是一个循环、可以处理事件。

每个创建的多线程都会自己创建一个NSRunLoop。

主线程中的NSRunLoop是默认开启的但是处于一种“等待”的状态（而不像一些命令行程序一样运行一次就结束了），当有信息输入时NSRunLoop才会发生响应，所以主线程不会被卡线程。

在多线程中使用就必须手动管理了NSRunLoop了。

下来是Run Loop的使用场合：
1. 使用port或是自定义的input source来和其他线程进行通信&lt;AFNetworking中有使用&gt;
2. 在线程（非主线程）中使用timer
3. 使用 performSelector...系列,
<pre class="lang:objc decode:true">- (void)performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray *)modes;
- (void)performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay;</pre>
4. 使用线程执行周期性工作
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd">引用别人的一篇文章觉得不错：
<h1><span class="link_title"><a href="http://blog.csdn.net/wjsxiaoweige/article/details/38318733"> - (BOOL)runMode:(NSString *)mode beforeDate:(NSDate *)limitDate 方法 详解 </a></span></h1>
</div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2015-03-17 15:00:49</wp:post_date>
		<wp:post_date_gmt>2015-03-17 07:00:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0%ef%bc%9ansrunloop%e7%9a%84%e7%90%86%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：iOS多线程的3种方式之NSThread</title>
		<link>http://www.dejohndong.com/?p=43</link>
		<pubDate>Fri, 06 Mar 2015 14:03:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[众所周知：iOS的多线程的创建方式有3种：<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSThread_Class/">NSThread</a>, <a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/NSOperation_class/">NSOperation</a> 和<a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand_Central_Dispatch)</a>。

为什么苹果要出3种多线程呢？答案是创建多线种的需求千变万化，不是所有的方式都能解决需求，所以三者相互共存着。今天我就先来分析NSThread的优缺点。

通过阅读苹果的官方文档和参考了同行中的大牛的理解得出一下结论：

优点：
<ol>
	<li>NSThread 是轻量级的（大家公认的，Apple最早的多线程技术）；</li>
	<li>可以管理生命周期，NSThread 是一个对象，必然可以通过代码来管理它的生命周期（ps: 其实很多人认为这是它的缺点，使用起来复杂了需求，但是如果你有相应的需求的时候你会发现这才是你要的最好的多线程方式，看问题是需要多面的，在某些场景下优点与缺点会互换）。</li>
</ol>
缺点：
<ol>
	<li> NSThread需要程序员自己处理其生命周期，数据同步问题（数据锁等），势必会影响了开发效率（ps:我以上的结论是站在不同的角度去说）;</li>
	<li> 数据同步以及数据加锁这些使用会影响性能的开销。</li>
</ol>
具体的使用我这边就不多讲了，推荐别人写的文章好了：
<h1><span class="link_title"><a href="http://blog.csdn.net/totogo2010/article/details/8010231"> iOS多线程编程之NSThread的使用</a></span></h1>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2015-03-06 22:03:48</wp:post_date>
		<wp:post_date_gmt>2015-03-06 14:03:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0%ef%bc%9aios-%e5%a4%9a%e7%ba%bf%e7%a8%8b%e7%9a%843%e7%a7%8d%e6%96%b9%e5%bc%8f%e4%b9%8bnsthread</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：iOS多线程的3种方式之NSOperation</title>
		<link>http://www.dejohndong.com/?p=50</link>
		<pubDate>Fri, 06 Mar 2015 14:42:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[众所周知：iOS的多线程的创建方式有3种：<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSThread_Class/">NSThread</a>, <a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/NSOperation_class/">NSOperation</a> 和<a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand_Central_Dispatch)</a>。

为什么苹果要出3种多线程呢？答案是创建多线种的需求千变万化，不是所有的方式都能解决需求，所以三者相互共存着。今天我就先来分析NSOperation的优缺点。

通过阅读苹果的官方文档和参考了同行中的大牛的理解得出一下结论：

优点：
<ol>
	<li>NSOperation不需要关心线程管理，数据同步的事情，可以把精力放在自己需要执行的操作上；</li>
	<li>NSOperation可以监控多线程的运行状态，随时可以结束任务；</li>
	<li>NSOperation支持KVO；</li>
</ol>
缺点：
<ol>
	<li>比GCD更高级的抽象，造成了性能上的劣势；</li>
	<li>对于新人来说，使用起来比GCD相对复杂；</li>
</ol>
具体的使用我这边就不多讲了，推荐别人写的文章好了：
<h1><span class="link_title"><a href="http://blog.csdn.net/totogo2010/article/details/8013316">iOS多线程编程之NSOperation和NSOperationQueue的使用 </a></span></h1>
&nbsp;
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2015-03-06 22:42:31</wp:post_date>
		<wp:post_date_gmt>2015-03-06 14:42:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0%ef%bc%9aios%e5%a4%9a%e7%ba%bf%e7%a8%8b%e7%9a%843%e7%a7%8d%e6%96%b9%e5%bc%8f%e4%b9%8bnsoperation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：iOS多线程的3种方式之GCD</title>
		<link>http://www.dejohndong.com/?p=57</link>
		<pubDate>Sat, 07 Mar 2015 02:12:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[众所周知：iOS的多线程的创建方式有3种：<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSThread_Class/">NSThread</a>, <a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/NSOperation_class/">NSOperation</a> 和<a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">GCD(Grand_Central_Dispatch)</a>。

为什么苹果要出3种多线程呢？答案是创建多线种的需求千变万化，不是所有的方式都能解决需求，所以三者相互共存着。今天我就先来分析GCD的优缺点。

通过阅读苹果的官方文档和参考了同行中的大牛的理解得出一下结论：

优点：
<ol>
	<li>使用block技术（闭包），使代码看上去十分简洁，使用简单（适合新手）；</li>
	<li>能自动分配到空闲的处理器内核中，最大限度发挥多核心CPU的性能；</li>
</ol>
缺点：
<ol>
	<li>不能管理线程的生命周期，不能满足某些需求例如图片上传的取消（AFNetworking中就是用NSOperation实现的）。</li>
</ol>
总结：iOS的多线程的这3种方式会一直存在着来满足不同的用户开发需求，三者相辅相成。我们不能一味的说哪种多线程的好与不好，只要找到某个场景下最合适的方法就可以了。

具体的使用我这边就不多讲了，推荐别人写的文章好了：
<h1><span class="link_title"><a href="http://blog.csdn.net/totogo2010/article/details/8016129">iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用 </a></span></h1>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2015-03-07 10:12:24</wp:post_date>
		<wp:post_date_gmt>2015-03-07 02:12:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0%ef%bc%9aios%e5%a4%9a%e7%ba%bf%e7%a8%8b%e7%9a%843%e7%a7%8d%e6%96%b9%e5%bc%8f%e4%b9%8bgcd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：Category与Extension的区别</title>
		<link>http://www.dejohndong.com/?p=63</link>
		<pubDate>Wed, 11 Mar 2015 09:18:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[很早就知道了Category和Extension了，虽然平常使用的频率还是可以的，但真正的区别也不是很清楚；

于是乎查阅了相关资料并且结合自己的实践得出以下结论：

Category: 字面意思是类别。
<ol>
	<li>主要用来扩展方法，并且适用于subclass;</li>
	<li>只能添加readonly的属性, 如果要添加readwrite属性必须在runtime过程中用objc_setAssociatedObject()&amp;objc_getAssociatedObject()方法来实现属性的get&amp;set方法;</li>
</ol>
Extension:字面意思是扩展。
<ol>
	<li>同样可以扩展方法和属性，但局限于原始类；</li>
	<li>声明的方法必须在@implemention中实现，不然编译器会报warning;</li>
</ol>
在extension中可以定义可写的属性，公有可读、私有可写的属性(Publicly-Readable, Privately-Writeable Properties)一般这样实现。
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2015-03-11 17:18:49</wp:post_date>
		<wp:post_date_gmt>2015-03-11 09:18:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0%ef%bc%9acategory%e4%b8%8eextension%e7%9a%84%e5%8c%ba%e5%88%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Objective-C 2.0: runtime运行时</title>
		<link>http://www.dejohndong.com/?p=80</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[最近正在消化自己一直使用的SQLitePersisentObject的大牛代码，虽然该代码写了已经很久，但内部还是有很多巧妙的写法值得我们学习的地方。今年我就先来讲解一些objective-c 中的runtime运行时。

众所周知，Objective-C是款接近动态语言的语言。为什么说她是接近动态呢？因为她是动态编译的
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2015-03-24 21:32:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="objective-c"><![CDATA[Objective-C]]></category>
		<category domain="category" nicename="jailbreak"><![CDATA[越狱开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Objective-C 2.0: isa-swizzling 以及KVO的实现原理</title>
		<link>http://www.dejohndong.com/?p=85</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[调试过代码的iOS开发者都会知道存在一个isa指针，isa指针
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2015-03-26 08:11:25</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios-development"><![CDATA[iOS开发]]></category>
		<category domain="category" nicename="objective-c"><![CDATA[Objective-C]]></category>
		<category domain="category" nicename="jailbreak"><![CDATA[越狱开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：SQLitePersistentObject 与CoreData比较</title>
		<link>http://www.dejohndong.com/?p=87</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2015-03-17 17:39:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="style"><![CDATA[DeJohn Style]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS学习笔记：CocoaPods之插件化开发模式</title>
		<link>http://www.dejohndong.com/?p=92</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2015-03-19 11:02:13</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="style"><![CDATA[DeJohn Style]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Objective-C 2.0: Block 的3种类型</title>
		<link>http://www.dejohndong.com/?p=100</link>
		<pubDate>Sun, 12 Apr 2015 12:51:49 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd">Block类型有3种形式：NSConcreteStackBlock、NSConcreteGlobalBlock和NSConcreteMallocBlock。</div>
<div></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>
<div id="xunlei_com_thunder_helper_plugin_d462f475-c18e-46be-bd10-327458d045bd"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2015-04-12 20:51:49</wp:post_date>
		<wp:post_date_gmt>2015-04-12 12:51:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>objective-c-2-0-block-%e7%9a%843%e7%a7%8d%e7%b1%bb%e5%9e%8b</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="note"><![CDATA[iOS学习笔记]]></category>
		<category domain="category" nicename="ios-development"><![CDATA[iOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://www.dejohndong.com/?p=108</link>
		<pubDate>Wed, 15 Apr 2015 00:55:32 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://www.dejohndong.com/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2015-04-15 08:55:32</wp:post_date>
		<wp:post_date_gmt>2015-04-15 00:55:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%87%aa%e5%8a%a8%e8%8d%89%e7%a8%bf</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="style"><![CDATA[DeJohn Style]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[auto-draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1429064966]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
